var board = [['BP', 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0], 
             [0, 0, 0, 0, 0, 0, 0, 0]];

function Pawn (position) {
  this.position = position;
}

Pawn.prototype.move = function (position) {
  var coordinates = search(position, 0);
  //Swich piece
};

function search(piece, column) {
  if (!column) {
    // This statement allows you to omit the column parameter.
    // So you can call 'search(9);' and it will assume the column is 0.
    column = 0;
  }
  if (column >= board.length) {
    console.log('Piece is not present');
    return null;
  }
  if (_.contains(board[column], piece)) {
    var coordinates = [_.indexOf(board[column], piece), column];
    console.log(coordinates);
    return coordinates;
  } else {
    return search(piece, column + 1);
  }
}


makePawns();

var pawn = new Pawn (board[0][0]);

