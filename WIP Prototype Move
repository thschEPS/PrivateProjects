var board = [
    ['E', 'E', 'E', 'E'],
    ['E', 'E', 'E', 'E'],
    ['E', 'E', 'E', 'E'],
    ['E', 'E', 'E', 'E']
];

function Pawn(position) {
    this.position = position;
    Object.defineProperty(this, 'color', {
        get: function() {
            var hold = this.position,
                holdTwo = this.position.substring(0, 1);
            if (holdTwo === 'W') {
                return 'White';
            } else if (holdTwo === 'B') {
                return 'Black';
            }
        }
    });
}

function search(piece, column) {

  if (column >= board.length) {
    console.log('Piece is not present');
    return null;
  }
  if (_.contains(board[column], piece)) {
    var coordinates = [column, _.indexOf(board[column], piece)];
    return coordinates;
  } else {
    return search(piece, column + 1);
  }
}

Pawn.prototype.move = function (position) {
  var coordinates = search(position, 0),
      swapColumn = coordinates[1] + 1,
      swapCoordinates = [swapColumn, coordinates[0]],
      swapHold = board[swapCoordinates[0]][swapCoordinates[1]];
      if (board[swapCoordinates[0]][swapCoordinates[1]] !== 'E') {
        alert('Beep');
      } else {
        board[swapCoordinates[0]][swapCoordinates[1]] = position; 
        board[coordinates[0]][coordinates[1]] = swapHold;
      }
 for (var i = 0; i < 8; i ++) {
   console.log(board[i]);
 }
};


function createPawns() {
  var pieces = [];
    for (var blackPieces = 0; blackPieces < board.length; blackPieces++) {
        var blackPiece = new Pawn(board[0][blackPieces]);
        board[0][blackPieces] = 'BP';
      pieces.push(blackPiece);
    }
    for (var whitePieces = 3; whitePieces > -1; whitePieces--) {
        var whitePiece = new Pawn(board[3][blackPieces]);
        board[3][whitePieces] = 'WP';
            pieces.push(whitePiece);


    }

    for (var q = 0; q < 4; q++) {
        console.log(board[q]);
    }
  return pieces;
  //Problems finding specific piece? Does it know wat I mean when I use call the function from the array?
}

var pieces = createPawns();

pieces[1].move();

//Having problems with the function call
