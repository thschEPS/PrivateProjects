    attack: function() {
        this.direction = false; //confirm("OK for Left, Cancel for Right");
        //Allows user input, whether they want to go left or right
        if (this.direction === false) {
            if (grid[this.row][this.rightColumn] !== ' E ') {
               if (_.indexOf(grid[this.x], this.y) !== 0) {
                    //UnderscoreJS makes sure the pieces is not moving off the board 
                    var rightPieceList = [grid[this.x][this.y], grid[this.row][this.rightColumn]];
                    grid[this.x][this.y] = ' E ';
                    grid[this.row][this.rightColumn] = rightPieceList[0];
                    this.y = this.rightColumn;
                    this.x = this.row;
                    rightPieceList.length = 0;
                    //CUts piece out of game so it cannot move. 
                    for (var i = 0; i < pieceSetUp.length; i++) {
                      if (pieceSetUp[i].position === rightPieceList[0]){
                        var index = _.indexOf(pieceSetUp,pieceSetUp[i]);
                        if (index > -1) {
                          pieceSetUp.splice(index, 1);
                          
                        }
                      }
                    }
                    display();

                } 
            } else {
                console.log('No piece here, try moving again');
            
            }
        } else {
          if (grid[this.row][this.leftColumn] !== ' E ') {
            console.log('No piece to move here');
          } else {
            if (this.y === 3) {
                console.log('You have approached the edge of the board');
              }
                if (_.indexOf(grid[this.x], this.y) !== 3) {
                    //UnderscoreJS makes sure the pieces is not moving off the board 
                    var leftPieceList = [grid[this.x][this.y], grid[this.row][this.leftColumn]];
                    grid[this.x][this.y] = ' E ';
                    for (var i = 0; i < pieceSetUp.length; i++) {
                      if (pieceSetUp[i].position === leftPieceList[0]){
                        var index = _.indexOf(pieceSetUp,pieceSetUp[i]);
                        if (index > -1) {
                          pieceSetUp.splice(index, 1);
                          
                        }
                      }
                    }
                    grid[this.row][this.leftColumn] = leftPieceList[0];
                    this.y = this.leftColumn;
                    this.x = this.row;
                    leftPieceList.length = 0;
                    
                    display();
                } else {
                    console.log('You have approached the edge of the board');
                } 
            
          }
        }
}
